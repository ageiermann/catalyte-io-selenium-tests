<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="8" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-03T14:30:56 EDT" name="Surefire suite" finished-at="2025-09-03T14:31:41 EDT" duration-ms="44434">
    <groups>
    </groups>
    <test started-at="2025-09-03T14:30:56 EDT" name="Surefire test" finished-at="2025-09-03T14:31:41 EDT" duration-ms="44434">
      <class name="org.catalyte.io.tests.unit.HomepageDOMComparisonTest">
        <test-method is-config="true" signature="setUpBase()[pri:0, instance:org.catalyte.io.tests.unit.HomepageDOMComparisonTest@483f6d77]" started-at="2025-09-03T14:31:33 EDT" name="setUpBase" finished-at="2025-09-03T14:31:34 EDT" duration-ms="1354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBase -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.catalyte.io.tests.unit.HomepageDOMComparisonTest@483f6d77]" started-at="2025-09-03T14:31:34 EDT" name="setUp" finished-at="2025-09-03T14:31:38 EDT" duration-ms="4097" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="compareBaselineWithLivePageLenientThreshold()[pri:0, instance:org.catalyte.io.tests.unit.HomepageDOMComparisonTest@483f6d77]" started-at="2025-09-03T14:31:38 EDT" name="compareBaselineWithLivePageLenientThreshold" finished-at="2025-09-03T14:31:40 EDT" duration-ms="2113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareBaselineWithLivePageLenientThreshold -->
        <test-method is-config="true" signature="afterEach(org.testng.ITestResult)[pri:0, instance:org.catalyte.io.tests.unit.HomepageDOMComparisonTest@483f6d77]" started-at="2025-09-03T14:31:40 EDT" name="afterEach" finished-at="2025-09-03T14:31:40 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=compareBaselineWithLivePageLenientThreshold status=SUCCESS method=HomepageDOMComparisonTest.compareBaselineWithLivePageLenientThreshold()[pri:0, instance:org.catalyte.io.tests.unit.HomepageDOMComparisonTest@483f6d77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEach -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.catalyte.io.tests.unit.HomepageDOMComparisonTest@483f6d77]" started-at="2025-09-03T14:31:40 EDT" name="tearDown" finished-at="2025-09-03T14:31:41 EDT" duration-ms="304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDownBase()[pri:0, instance:org.catalyte.io.tests.unit.HomepageDOMComparisonTest@483f6d77]" started-at="2025-09-03T14:31:41 EDT" name="tearDownBase" finished-at="2025-09-03T14:31:41 EDT" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownBase -->
      </class> <!-- org.catalyte.io.tests.unit.HomepageDOMComparisonTest -->
      <class name="org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests">
        <test-method is-config="true" signature="setUpBase()[pri:0, instance:org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests@ea6147e]" started-at="2025-09-03T14:30:56 EDT" name="setUpBase" finished-at="2025-09-03T14:30:59 EDT" duration-ms="2853" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBase -->
        <test-method is-config="true" signature="setUpPages()[pri:0, instance:org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests@ea6147e]" started-at="2025-09-03T14:30:59 EDT" name="setUpPages" finished-at="2025-09-03T14:31:03 EDT" duration-ms="4190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPages -->
        <test-method signature="regressionTestForAllApprenticeshipLinks_CheckNavigationFunctionality()[pri:0, instance:org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests@ea6147e]" started-at="2025-09-03T14:31:04 EDT" name="regressionTestForAllApprenticeshipLinks_CheckNavigationFunctionality" finished-at="2025-09-03T14:31:26 EDT" duration-ms="22276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regressionTestForAllApprenticeshipLinks_CheckNavigationFunctionality -->
        <test-method is-config="true" signature="afterEach(org.testng.ITestResult)[pri:0, instance:org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests@ea6147e]" started-at="2025-09-03T14:31:26 EDT" name="afterEach" finished-at="2025-09-03T14:31:26 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=regressionTestForAllApprenticeshipLinks_CheckNavigationFunctionality status=SUCCESS method=ApprenticeshipsPageTests.regressionTestForAllApprenticeshipLinks_CheckNavigationFunctionality()[pri:0, instance:org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests@ea6147e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEach -->
        <test-method signature="verifyAllKeyElementsOfHowItWorksSectionPresent()[pri:0, instance:org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests@ea6147e]" started-at="2025-09-03T14:31:26 EDT" name="verifyAllKeyElementsOfHowItWorksSectionPresent" finished-at="2025-09-03T14:31:26 EDT" duration-ms="100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllKeyElementsOfHowItWorksSectionPresent -->
        <test-method is-config="true" signature="afterEach(org.testng.ITestResult)[pri:0, instance:org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests@ea6147e]" started-at="2025-09-03T14:31:26 EDT" name="afterEach" finished-at="2025-09-03T14:31:26 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAllKeyElementsOfHowItWorksSectionPresent status=SUCCESS method=ApprenticeshipsPageTests.verifyAllKeyElementsOfHowItWorksSectionPresent()[pri:0, instance:org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests@ea6147e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEach -->
        <test-method is-config="true" signature="tearDownBase()[pri:0, instance:org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests@ea6147e]" started-at="2025-09-03T14:31:26 EDT" name="tearDownBase" finished-at="2025-09-03T14:31:26 EDT" duration-ms="329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownBase -->
      </class> <!-- org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests -->
      <class name="org.catalyte.io.tests.scenarios.HireApprenticeSectionTests">
        <test-method is-config="true" signature="setUpBase()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:31:26 EDT" name="setUpBase" finished-at="2025-09-03T14:31:28 EDT" duration-ms="1274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBase -->
        <test-method is-config="true" signature="setUpPages()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:31:28 EDT" name="setUpPages" finished-at="2025-09-03T14:31:31 EDT" duration-ms="2994" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPages -->
        <test-method is-config="true" signature="resetWarnings()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:31:31 EDT" name="resetWarnings" finished-at="2025-09-03T14:31:31 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetWarnings -->
        <test-method signature="testAccordionsExistLenient()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:31:31 EDT" name="testAccordionsExistLenient" finished-at="2025-09-03T14:31:31 EDT" duration-ms="214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccordionsExistLenient -->
        <test-method is-config="true" signature="afterEach(org.testng.ITestResult)[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:31:31 EDT" name="afterEach" finished-at="2025-09-03T14:31:31 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAccordionsExistLenient status=SUCCESS method=HireApprenticeSectionTests.testAccordionsExistLenient()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEach -->
        <test-method is-config="true" signature="resetWarnings()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:31:31 EDT" name="resetWarnings" finished-at="2025-09-03T14:31:31 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetWarnings -->
        <test-method signature="testImagesExistLenient()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:31:31 EDT" name="testImagesExistLenient" finished-at="2025-09-03T14:31:31 EDT" duration-ms="191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImagesExistLenient -->
        <test-method is-config="true" signature="afterEach(org.testng.ITestResult)[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:31:31 EDT" name="afterEach" finished-at="2025-09-03T14:31:31 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testImagesExistLenient status=SUCCESS method=HireApprenticeSectionTests.testImagesExistLenient()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEach -->
        <test-method is-config="true" signature="resetWarnings()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:31:31 EDT" name="resetWarnings" finished-at="2025-09-03T14:31:31 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetWarnings -->
        <test-method signature="testMenuTextItemsLenient()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:31:31 EDT" name="testMenuTextItemsLenient" finished-at="2025-09-03T14:31:31 EDT" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMenuTextItemsLenient -->
        <test-method is-config="true" signature="afterEach(org.testng.ITestResult)[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:31:31 EDT" name="afterEach" finished-at="2025-09-03T14:31:31 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMenuTextItemsLenient status=SUCCESS method=HireApprenticeSectionTests.testMenuTextItemsLenient()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEach -->
        <test-method is-config="true" signature="resetWarnings()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:31:31 EDT" name="resetWarnings" finished-at="2025-09-03T14:31:31 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetWarnings -->
        <test-method signature="testVideosExistLenient()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:31:31 EDT" name="testVideosExistLenient" finished-at="2025-09-03T14:31:31 EDT" duration-ms="107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVideosExistLenient -->
        <test-method is-config="true" signature="afterEach(org.testng.ITestResult)[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:31:31 EDT" name="afterEach" finished-at="2025-09-03T14:31:31 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVideosExistLenient status=SUCCESS method=HireApprenticeSectionTests.testVideosExistLenient()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEach -->
        <test-method is-config="true" signature="resetWarnings()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:31:31 EDT" name="resetWarnings" finished-at="2025-09-03T14:31:31 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetWarnings -->
        <test-method signature="testWorkWithUsButtonDisplayedAndFunctionsLenient()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:31:31 EDT" name="testWorkWithUsButtonDisplayedAndFunctionsLenient" finished-at="2025-09-03T14:31:32 EDT" duration-ms="1335" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWorkWithUsButtonDisplayedAndFunctionsLenient -->
        <test-method is-config="true" signature="afterEach(org.testng.ITestResult)[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:31:33 EDT" name="afterEach" finished-at="2025-09-03T14:31:33 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWorkWithUsButtonDisplayedAndFunctionsLenient status=SUCCESS method=HireApprenticeSectionTests.testWorkWithUsButtonDisplayedAndFunctionsLenient()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEach -->
        <test-method is-config="true" signature="tearDownBase()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:31:33 EDT" name="tearDownBase" finished-at="2025-09-03T14:31:33 EDT" duration-ms="332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownBase -->
      </class> <!-- org.catalyte.io.tests.scenarios.HireApprenticeSectionTests -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
