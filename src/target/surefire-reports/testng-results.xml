<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="8" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-03T14:52:53 EDT" name="Surefire suite" finished-at="2025-09-03T14:53:40 EDT" duration-ms="46430">
    <groups>
    </groups>
    <test started-at="2025-09-03T14:52:53 EDT" name="Surefire test" finished-at="2025-09-03T14:53:40 EDT" duration-ms="46430">
      <class name="org.catalyte.io.tests.unit.HomepageDOMComparisonTest">
        <test-method is-config="true" signature="setUpBase()[pri:0, instance:org.catalyte.io.tests.unit.HomepageDOMComparisonTest@483f6d77]" started-at="2025-09-03T14:53:32 EDT" name="setUpBase" finished-at="2025-09-03T14:53:33 EDT" duration-ms="1013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBase -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.catalyte.io.tests.unit.HomepageDOMComparisonTest@483f6d77]" started-at="2025-09-03T14:53:33 EDT" name="setUp" finished-at="2025-09-03T14:53:37 EDT" duration-ms="3569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="compareBaselineWithLivePageLenientThreshold()[pri:0, instance:org.catalyte.io.tests.unit.HomepageDOMComparisonTest@483f6d77]" started-at="2025-09-03T14:53:37 EDT" name="compareBaselineWithLivePageLenientThreshold" finished-at="2025-09-03T14:53:40 EDT" duration-ms="3024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareBaselineWithLivePageLenientThreshold -->
        <test-method is-config="true" signature="afterEach(org.testng.ITestResult)[pri:0, instance:org.catalyte.io.tests.unit.HomepageDOMComparisonTest@483f6d77]" started-at="2025-09-03T14:53:40 EDT" name="afterEach" finished-at="2025-09-03T14:53:40 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=compareBaselineWithLivePageLenientThreshold status=SUCCESS method=HomepageDOMComparisonTest.compareBaselineWithLivePageLenientThreshold()[pri:0, instance:org.catalyte.io.tests.unit.HomepageDOMComparisonTest@483f6d77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEach -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.catalyte.io.tests.unit.HomepageDOMComparisonTest@483f6d77]" started-at="2025-09-03T14:53:40 EDT" name="tearDown" finished-at="2025-09-03T14:53:40 EDT" duration-ms="258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDownBase()[pri:0, instance:org.catalyte.io.tests.unit.HomepageDOMComparisonTest@483f6d77]" started-at="2025-09-03T14:53:40 EDT" name="tearDownBase" finished-at="2025-09-03T14:53:40 EDT" duration-ms="106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownBase -->
      </class> <!-- org.catalyte.io.tests.unit.HomepageDOMComparisonTest -->
      <class name="org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests">
        <test-method is-config="true" signature="setUpBase()[pri:0, instance:org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests@ea6147e]" started-at="2025-09-03T14:52:53 EDT" name="setUpBase" finished-at="2025-09-03T14:52:56 EDT" duration-ms="2506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBase -->
        <test-method is-config="true" signature="setUpPages()[pri:0, instance:org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests@ea6147e]" started-at="2025-09-03T14:52:56 EDT" name="setUpPages" finished-at="2025-09-03T14:53:00 EDT" duration-ms="3876" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPages -->
        <test-method signature="regressionTestForAllApprenticeshipLinks_CheckNavigationFunctionality()[pri:0, instance:org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests@ea6147e]" started-at="2025-09-03T14:53:00 EDT" name="regressionTestForAllApprenticeshipLinks_CheckNavigationFunctionality" finished-at="2025-09-03T14:53:26 EDT" duration-ms="25858" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regressionTestForAllApprenticeshipLinks_CheckNavigationFunctionality -->
        <test-method is-config="true" signature="afterEach(org.testng.ITestResult)[pri:0, instance:org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests@ea6147e]" started-at="2025-09-03T14:53:26 EDT" name="afterEach" finished-at="2025-09-03T14:53:26 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=regressionTestForAllApprenticeshipLinks_CheckNavigationFunctionality status=SUCCESS method=ApprenticeshipsPageTests.regressionTestForAllApprenticeshipLinks_CheckNavigationFunctionality()[pri:0, instance:org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests@ea6147e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEach -->
        <test-method signature="verifyAllKeyElementsOfHowItWorksSectionPresent()[pri:0, instance:org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests@ea6147e]" started-at="2025-09-03T14:53:26 EDT" name="verifyAllKeyElementsOfHowItWorksSectionPresent" finished-at="2025-09-03T14:53:26 EDT" duration-ms="70" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllKeyElementsOfHowItWorksSectionPresent -->
        <test-method is-config="true" signature="afterEach(org.testng.ITestResult)[pri:0, instance:org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests@ea6147e]" started-at="2025-09-03T14:53:26 EDT" name="afterEach" finished-at="2025-09-03T14:53:26 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAllKeyElementsOfHowItWorksSectionPresent status=SUCCESS method=ApprenticeshipsPageTests.verifyAllKeyElementsOfHowItWorksSectionPresent()[pri:0, instance:org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests@ea6147e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEach -->
        <test-method is-config="true" signature="tearDownBase()[pri:0, instance:org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests@ea6147e]" started-at="2025-09-03T14:53:26 EDT" name="tearDownBase" finished-at="2025-09-03T14:53:26 EDT" duration-ms="289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownBase -->
      </class> <!-- org.catalyte.io.tests.scenarios.ApprenticeshipsPageTests -->
      <class name="org.catalyte.io.tests.scenarios.HireApprenticeSectionTests">
        <test-method is-config="true" signature="setUpBase()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:53:26 EDT" name="setUpBase" finished-at="2025-09-03T14:53:27 EDT" duration-ms="1040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBase -->
        <test-method is-config="true" signature="setUpPages()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:53:27 EDT" name="setUpPages" finished-at="2025-09-03T14:53:30 EDT" duration-ms="2891" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPages -->
        <test-method is-config="true" signature="resetWarnings()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:53:30 EDT" name="resetWarnings" finished-at="2025-09-03T14:53:30 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetWarnings -->
        <test-method signature="testAccordionsExistLenient()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:53:30 EDT" name="testAccordionsExistLenient" finished-at="2025-09-03T14:53:30 EDT" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccordionsExistLenient -->
        <test-method is-config="true" signature="afterEach(org.testng.ITestResult)[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:53:30 EDT" name="afterEach" finished-at="2025-09-03T14:53:30 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAccordionsExistLenient status=SUCCESS method=HireApprenticeSectionTests.testAccordionsExistLenient()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEach -->
        <test-method is-config="true" signature="resetWarnings()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:53:30 EDT" name="resetWarnings" finished-at="2025-09-03T14:53:30 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetWarnings -->
        <test-method signature="testImagesExistLenient()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:53:30 EDT" name="testImagesExistLenient" finished-at="2025-09-03T14:53:30 EDT" duration-ms="87" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImagesExistLenient -->
        <test-method is-config="true" signature="afterEach(org.testng.ITestResult)[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:53:30 EDT" name="afterEach" finished-at="2025-09-03T14:53:30 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testImagesExistLenient status=SUCCESS method=HireApprenticeSectionTests.testImagesExistLenient()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEach -->
        <test-method is-config="true" signature="resetWarnings()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:53:30 EDT" name="resetWarnings" finished-at="2025-09-03T14:53:30 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetWarnings -->
        <test-method signature="testMenuTextItemsLenient()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:53:30 EDT" name="testMenuTextItemsLenient" finished-at="2025-09-03T14:53:30 EDT" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMenuTextItemsLenient -->
        <test-method is-config="true" signature="afterEach(org.testng.ITestResult)[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:53:30 EDT" name="afterEach" finished-at="2025-09-03T14:53:30 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMenuTextItemsLenient status=SUCCESS method=HireApprenticeSectionTests.testMenuTextItemsLenient()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEach -->
        <test-method is-config="true" signature="resetWarnings()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:53:30 EDT" name="resetWarnings" finished-at="2025-09-03T14:53:30 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetWarnings -->
        <test-method signature="testVideosExistLenient()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:53:30 EDT" name="testVideosExistLenient" finished-at="2025-09-03T14:53:30 EDT" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVideosExistLenient -->
        <test-method is-config="true" signature="afterEach(org.testng.ITestResult)[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:53:30 EDT" name="afterEach" finished-at="2025-09-03T14:53:30 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVideosExistLenient status=SUCCESS method=HireApprenticeSectionTests.testVideosExistLenient()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEach -->
        <test-method is-config="true" signature="resetWarnings()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:53:30 EDT" name="resetWarnings" finished-at="2025-09-03T14:53:30 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetWarnings -->
        <test-method signature="testWorkWithUsButtonDisplayedAndFunctionsLenient()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:53:30 EDT" name="testWorkWithUsButtonDisplayedAndFunctionsLenient" finished-at="2025-09-03T14:53:32 EDT" duration-ms="1354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWorkWithUsButtonDisplayedAndFunctionsLenient -->
        <test-method is-config="true" signature="afterEach(org.testng.ITestResult)[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:53:32 EDT" name="afterEach" finished-at="2025-09-03T14:53:32 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWorkWithUsButtonDisplayedAndFunctionsLenient status=SUCCESS method=HireApprenticeSectionTests.testWorkWithUsButtonDisplayedAndFunctionsLenient()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEach -->
        <test-method is-config="true" signature="tearDownBase()[pri:0, instance:org.catalyte.io.tests.scenarios.HireApprenticeSectionTests@759d26fb]" started-at="2025-09-03T14:53:32 EDT" name="tearDownBase" finished-at="2025-09-03T14:53:32 EDT" duration-ms="178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownBase -->
      </class> <!-- org.catalyte.io.tests.scenarios.HireApprenticeSectionTests -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
